---
#  ____                 _                                  _
# |  _ \  _____   _____| | ___  _ __  _ __ ___   ___ _ __ | |_
# | | | |/ _ \ \ / / _ \ |/ _ \| '_ \| '_ ` _ \ / _ \ '_ \| __|
# | |_| |  __/\ V /  __/ | (_) | |_) | | | | | |  __/ | | | |_
# |____/ \___| \_/ \___|_|\___/| .__/|_| |_| |_|\___|_| |_|\__|
#                              |_|


# ==============================================================================
# VS Code
# ==============================================================================

- name: Install VS Code extensions
  ansible.builtin.command: /opt/homebrew/bin/code --install-extension {{ item }}
  loop: "{{ vscode_extensions }}"
  register: vscode_extension
  changed_when: "'successfully installed' in vscode_extension.stdout"

# ==============================================================================
# PNPM / Node.js
# ==============================================================================

- name: Check if pnpm is installed
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.local/bin/pnpm/pnpm"
  register: pnpm_binary
  check_mode: false

- name: Fetch and run pnpm install script
  ansible.builtin.shell: curl -sSf https://get.pnpm.io/install.sh | sh -s
  environment:
    PNPM_HOME: "{{ ansible_env.HOME }}/.local/bin/pnpm"
    ZDOTDIR: "{{ ansible_env.HOME }}/.config/zsh"
  when: not pnpm_binary.stat.exists

- name: Remove pnpm lines from ".zshrc"
  ansible.builtin.replace:
    regexp: "(# pnpm)((.|\n)*)(# pnpm end)"
    path: "{{ ansible_env.HOME }}/.config/zsh/.zshrc"
  when: not pnpm_binary.stat.exists

- name: Install NodeJS LTS
  ansible.builtin.shell: "pnpm env use --global lts"
  environment:
    PNPM_HOME: "{{ ansible_env.HOME }}/.local/bin/pnpm"
    PATH: "$PATH:{{ ansible_env.HOME }}/.local/bin/pnpm"
  when: not pnpm_binary.stat.exists
